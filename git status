[1mdiff --git a/LCD_Y_LDR.ino b/LCD_Y_LDR.ino[m
[1mdeleted file mode 100644[m
[1mindex c6f289e..0000000[m
[1m--- a/LCD_Y_LDR.ino[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-#include <LiquidCrystal.h>[m
[31m-LiquidCrystal LCD (13,12,11,10,9,8);[m
[31m-int dato;                          //int se usa para definir variables por encima de 8 bits, por que va de 0 a 1023, usamos byte solo para datos de 0 a 254[m
[31m-void setup() {[m
[31m- LCD.begin(16,2);[m
[31m-[m
[31m-[m
[31m-}[m
[31m-[m
[31m-void loop() {[m
[31m-  dato=analogRead(A0);[m
[31m-  if(dato<300){[m
[31m-     [m
[31m-      LCD.setCursor(3,0); [m
[31m-      LCD.print(" ES DE NOCHE"); [m
[31m- }[m
[31m-[m
[31m- else{[m
[31m-     [m
[31m-      LCD.setCursor(3,0); [m
[31m-      LCD.print(" ES DE DIA  "); [m
[31m- }[m
[31m-  [m
[31m-}[m
[1mdiff --git a/README.md b/README.md[m
[1mdeleted file mode 100644[m
[1mindex 7472ae0..0000000[m
[1m--- a/README.md[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-# clase_Fotoelectronica[m
\ No newline at end of file[m
[1mdiff --git a/barrera_inf_tarea_pormi.ino b/barrera_inf_tarea_pormi.ino[m
[1mdeleted file mode 100644[m
[1mindex 18d540a..0000000[m
[1m--- a/barrera_inf_tarea_pormi.ino[m
[1m+++ /dev/null[m
[36m@@ -1,49 +0,0 @@[m
[31m-#include <LiquidCrystal.h>[m
[31m-LiquidCrystal LCD (13,12,11,10,9,8);[m
[31m-int dato;  //int se usa para definir variables por encima de 8 bits, por que va de 0 a 1023, usamos byte solo para datos de 0 a 254[m
[31m-#define Barrera 7[m
[31m-#define Reset 6[m
[31m-int BarreraActiva =0; [m
[31m-void setup() {[m
[31m- LCD.begin(16,2);[m
[31m- pinMode(Barrera, INPUT);   [m
[31m- pinMode(Reset, INPUT); [m
[31m-}[m
[31m-[m
[31m-void loop() {[m
[31m-    [m
[31m- dato=analogRead(A0);[m
[31m-  if(digitalRead(Reset)== 1){[m
[31m-     while(digitalRead(Reset) ==1){}[m
[31m-    BarreraActiva =0;[m
[31m-  }[m
[31m- [m
[31m-     if(dato<300 && digitalRead(Barrera)==1){[m
[31m-        while(digitalRead(Barrera) ==1){} [m
[31m-       BarreraActiva =1;[m
[31m-     [m
[31m-   [m
[31m-     }[m
[31m-    if( BarreraActiva){  [m
[31m-      LCD.setCursor(5,0); [m
[31m-      LCD.print("INTRUSO"); [m
[31m-    delay(300);[m
[31m-     }[m
[31m-     if(dato<300 && BarreraActiva ==0 ){[m
[31m-    [m
[31m-     LCD.clear();[m
[31m-      LCD.setCursor(5,0); [m
[31m-      LCD.print("NORMAL"); [m
[31m-    delay(300);[m
[31m-     }[m
[31m- [m
[31m- if(dato>300){[m
[31m-     [m
[31m-      LCD.setCursor(2,0); [m
[31m-      LCD.print("sk200 Sistema");[m
[31m-      LCD.setCursor(2,1);[m
[31m-      LCD.print("desactivado");[m
[31m-      delay(500);[m
[31m- }[m
[31m-  [m
[31m-}[m
[1mdiff --git a/contador_0099.ino b/contador_0099.ino[m
[1mdeleted file mode 100644[m
[1mindex acfdb2a..0000000[m
[1m--- a/contador_0099.ino[m
[1m+++ /dev/null[m
[36m@@ -1,26 +0,0 @@[m
[31m-[m
[31m-byte valor[10]={0X7E, 0X30, 0X6D, 0X79, 0X33, 0X5B, 0X5F, 0X70, 0X7F, 0X7B};[m
[31m-void setup() {[m
[31m-DDRD=255;[m
[31m-pinMode(8,OUTPUT);[m
[31m-pinMode(9, OUTPUT); [m
[31m-[m
[31m-}[m
[31m-[m
[31m-void loop() {[m
[31m-for(byte i=0; i<=9; i++){[m
[31m-  for(byte j=0; j<=9; j++){[m
[31m-    for(byte k=1; k<=50; k++){[m
[31m-     PORTD=valor[j];[m
[31m-     digitalWrite(8, LOW);[m
[31m-     digitalWrite(9, HIGH);[m
[31m-     delay(10);  [m
[31m-     PORTD=valor[i];[m
[31m-     digitalWrite(8, HIGH);[m
[31m-     digitalWrite(9, LOW);[m
[31m-     delay(10); [m
[31m-    }[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-}[m
[1mdiff --git a/taller1barrera.ino b/taller1barrera.ino[m
[1mdeleted file mode 100644[m
[1mindex 2c83f72..0000000[m
[1m--- a/taller1barrera.ino[m
[1m+++ /dev/null[m
[36m@@ -1,35 +0,0 @@[m
[31m-/*clse 19/08/2020[m
[31m- * [m
[31m- */[m
[31m-#define Barrera 12[m
[31m-#define Alarma 7[m
[31m-#define Reset 0[m
[31m-bool BarreraActiva = false;    // variable[m
[31m-[m
[31m-void setup() {[m
[31m- pinMode(Barrera, INPUT);  // put your setup code here, to run once:[m
[31m- pinMode(Alarma, OUTPUT);  // put your setup code here, to run once:[m
[31m- pinMode(Reset, INPUT);  // put your setup code here, to run once:[m
[31m-}[m
[31m-[m
[31m-void loop() {[m
[31m-[m
[31m- if(digitalRead(Barrera)==1){ //Entrada de barrera[m
[31m-    while(digitalRead(Barrera) ==1){} //antirebote[m
[31m-      BarreraActiva = true;[m
[31m- }[m
[31m-    [m
[31m- if(digitalRead(Reset)==1){ //entrada de reset[m
[31m-    while(digitalRead(Reset) ==1){} //antirebote[m
[31m-      BarreraActiva = false;[m
[31m- }[m
[31m-[m
[31m-   if (BarreraActiva == true){[m
[31m-      digitalWrite(Alarma, HIGH);   //Si algo obtaculiza la barrera se enciende la alarma[m
[31m-      }[m
[31m-  [m
[31m-  if (BarreraActiva == false){[m
[31m-      digitalWrite(Alarma, LOW);   // si no hay nada obstaculizando alarma apagada[m
[31m-      }[m
[31m-[m
[31m-}[m
[1mdiff --git a/taller2.2_20_08_20.ino b/taller2.2_20_08_20.ino[m
[1mdeleted file mode 100644[m
[1mindex 2eac40b..0000000[m
[1m--- a/taller2.2_20_08_20.ino[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-byte valor[10]={0X7E, 0X30, 0X6D, 0X79, 0X33, 0X5B, 0X5F, 0X70, 0X7F, 0X7B};[m
[31m-byte contador=0;[m
[31m-[m
[31m-void setup(){[m
[31m-  DDRD=255; //Todo el puerto D trabajar√† como salida, si queremos que el grupo tenga entrada y salida colocamos el numero (1 salida 0 entrada). tambien puedo hacerlo en binario[m
[31m-  pinMode (13, INPUT);[m
[31m-}[m
[31m- void loop(){[m
[31m-  if(digitalRead (13)==1){[m
[31m-     while (digitalRead(13)==1){}[m
[31m-     contador++;[m
[31m-     if(contador>9){[m
[31m-      contador=0;[m
[31m-     }[m
[31m-  }[m
[31m-  PORTD=valor[contador];[m
[31m- }[m
[1mdiff --git a/taller2_20_08_20.ino b/taller2_20_08_20.ino[m
[1mdeleted file mode 100644[m
[1mindex fddd9e2..0000000[m
[1m--- a/taller2_20_08_20.ino[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-byte valor[10]={0X7E, 0X30, 0X6D, 0X79, 0X33, 0X5B, 0X5F, 0X70, 0X7F, 0X7B};[m
[31m-[m
[31m-[m
[31m-void setup(){[m
[31m-  DDRD=255;  //Todo el puerto D trabajar√† como salida, si queremos que el grupo tenga entrada y salida colocamos el numero (1 salida 0 entrada). tambien puedo hacerlo en binario[m
[31m-}[m
[31m- void loop(){[m
[31m-  for (byte i=0; i<=9; i++){[m
[31m-    PORTD=valor[i];[m
[31m-    delay (500);[m
[31m-  }[m
[31m-  [m
[31m-  [m
[31m- }[m
